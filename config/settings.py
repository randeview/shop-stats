"""
Django settings for apps project.

Generated by 'django-admin startproject' using Django 4.2.24.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from datetime import timedelta
from pathlib import Path

import environ
from django.utils.translation import gettext_lazy as _

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-%8+&v9m$b5e8=$30o=q^xu%(3_qch$!3pzbb@s7q6#07v!2_!x"

# SECURITY WARNING: don't run with debug turned on in production!
env = environ.Env()
environ.Env.read_env(str(BASE_DIR / ".env"))
DEBUG = env.bool("DEBUG", True)
SITE_URL = env.str("SITE_URL", "http://127.0.0.1:8002")
STATIC_URL = env.str("STATIC_URL", "/static/")
ALLOWED_HOSTS = ["*"]

# Application definition

INSTALLED_APPS = [
    "jazzmin",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    "django_celery_beat",
    "rest_framework.authtoken",
    "app.users",
    "app.catalog",
    "rest_framework_simplejwt.token_blacklist",
    "drf_spectacular",
    "drf_spectacular_sidecar",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "django.middleware.locale.LocaleMiddleware",
]

ROOT_URLCONF = "config.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [str(BASE_DIR / "templates")],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                # 'django.contrib.users.context_processors.users',
                "django.contrib.messages.context_processors.messages",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "config.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases
def get_database_config(
    postgres_db: str,
    postgres_user: str,
    postgres_password: str,
    postgres_host: str,
    postgres_port: str,
):
    return {
        "default": {
            "ENGINE": "django.db.backends.postgresql_psycopg2",
            "NAME": postgres_db,
            "USER": postgres_user,
            "PASSWORD": postgres_password,
            "HOST": postgres_host,
            "PORT": postgres_port,
            "OPTIONS": {},
        }
    }


DATABASES = get_database_config(
    postgres_db=env.str("POSTGRES_DB"),
    postgres_user=env.str("POSTGRES_USER"),
    postgres_password=env.str("POSTGRES_PASSWORD"),
    postgres_host=env.str("POSTGRES_HOST"),
    postgres_port=env.str("POSTGRES_PORT"),
)

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

# AUTH_PASSWORD_VALIDATORS = [
#     {
#         'NAME': 'django.contrib.users.password_validation.UserAttributeSimilarityValidator',
#     },
#     {
#         'NAME': 'django.contrib.users.password_validation.MinimumLengthValidator',
#     },
#     {
#         'NAME': 'django.contrib.users.password_validation.CommonPasswordValidator',
#     },
#     {
#         'NAME': 'django.contrib.users.password_validation.NumericPasswordValidator',
#     },
# ]

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "kk"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

AUTH_USER_MODEL = "users.User"  # используем кастомную модель
CORS_ALLOW_CREDENTIALS = True

REST_FRAMEWORK = {
    "DEFAULT_SCHEMA_CLASS": "drf_spectacular.openapi.AutoSchema",
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework_simplejwt.authentication.JWTAuthentication",
    ),
    "DEFAULT_PERMISSION_CLASSES": ("rest_framework.permissions.IsAuthenticated",),
    "DEFAULT_THROTTLE_RATES": {
        "anon": "30/min",
        "user": "120/min",
    },
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination",
    "PAGE_SIZE": 100,
}

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=30),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=7),
    "ROTATE_REFRESH_TOKENS": False,
    "BLACKLIST_AFTER_ROTATION": True,  # работает с token_blacklist
    "SIGNING_KEY": SECRET_KEY,  # по умолчанию
    "AUTH_HEADER_TYPES": ("Bearer",),
}
# settings.py
# REST_FRAMEWORK["DEFAULT_AUTHENTICATION_CLASSES"] = (
#     "users.jwt.VersionedJWTAuthentication",
# )

SPECTACULAR_SETTINGS = {
    "TITLE": "Shop Analytics API",
    "DESCRIPTION": "Документация API для загрузки XLSX и аналитики продаж.",
    "VERSION": "1.0.0",
    "SERVE_INCLUDE_SCHEMA": False,  # сам эндпоинт схемы отдельно
    "SWAGGER_UI_DIST": "SIDECAR",  # использовать sidecar-статику
    "SWAGGER_UI_FAVICON_HREF": "SIDECAR",
    "REDOC_DIST": "SIDECAR",
    # Настройка JWT в доке (кнопка «Authorize»)
    "COMPONENT_SPLIT_REQUEST": True,
    "SECURITY": [{"BearerAuth": []}],
    "COMPONENTS": {
        "securitySchemes": {
            "BearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT",
            }
        }
    },
}

JAZZMIN_SETTINGS = {
    "site_title": _("Shop Analytics Admin"),
    "site_header": _("Shop Analytics"),
    "site_brand": _("Shop Analytics"),
    "welcome_sign": _("Welcome to Shop Analytics Admin"),
    "copyright": "© Shop Analytics",
    # Logos (optional)
    # Put files into STATIC and run collectstatic
    # "site_logo": "images/logo.png",
    # "login_logo": "images/logo.png",
    # "site_logo_classes": "img-circle",
    "show_ui_builder": True,  # live theme tweaks in the UI
    "theme": "cyborg",  # try: flatly, darkly, cosmo, lumen, solar, etc.
    "dark_mode_theme": "darkly",
    # Top menu
    "topmenu_links": [
        {"name": "Dashboard", "url": "admin:index", "permissions": ["auth.view_user"]},
        {"app": "users"},
        # {"name": "API Docs", "url": "/api/docs/", "new_tab": True},
    ],
    # Sidebar
    "show_sidebar": True,
    "navigation_expanded": True,
    "hide_apps": [],
    "hide_models": [],
    # Related modals (nicer UX)
    "related_modal_active": True,
    # Icons (FontAwesome)
    "icons": {
        "users.User": "fas fa-user",
        "auth.Group": "fas fa-users",
        "catalog.Category": "fas fa-sitemap",
        "catalog.Product": "fas fa-box",
        "sales.Sale": "fas fa-chart-line",
        "ingestion.Upload": "fas fa-file-upload",
    },
    # Change form layout
    "changeform_format": "horizontal_tabs",  # also: "collapsible", "single"
    "changeform_format_overrides": {
        "auth.user": "collapsible",
    },
    "order_with_respect_to": ["auth", "users", "catalog"],
}
JAZZMIN_UI_TWEAKS = {
    "theme": "cyborg",
}

LANGUAGES = [
    ("kk", _("Kazakh")),
    ("ru", _("Russian")),
]

# Where *.po files will live
LOCALE_PATHS = [BASE_DIR / "locale"]
